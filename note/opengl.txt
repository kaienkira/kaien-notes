===============================================================================
Pipeline
===============================================================================
vertex data               顶点数据
vertex shader             顶点着色器      *
shape assembly            图元装配
geometry shader           几何着色器      *
tesselation shader        细分着色器      *
rasterization             光栅化
fragment shader           片元着色器      *
alpha tests and blending  alpha测试与混合
    scissor test
    alpha test
    stencil test
    depth test
    blending
    dithering
    logic op

-------------------------------------------------------------------------------
应用阶段(Application Stage)
-------------------------------------------------------------------------------
几何阶段(Geometry Stage)
-------------------------------------------------------------------------------
LocalSpace
    * (ModelMatrix 模型矩阵) ->
WorldSpace
    * (ViewMatrix 观察矩阵) ->
ViewSpace
    * (ProjectionMatrix 投影矩阵)->
ClipSpace
    * (透视除法)-> NDC坐标 -> 屏幕坐标
ScreenSpace

*. 顶点着色器(vertex shader)
   [] 坐标变换
      把顶点坐标从模型空间转化到齐次裁减空间
*. 裁减(clipping)
*. 屏幕映射
   [] 硬件做透视除法, 得到NDC坐标
   [] NDC坐标转换为窗口坐标
-------------------------------------------------------------------------------
光栅化阶段(Rasterizer Stage)
-------------------------------------------------------------------------------
*. 三角形设置(triangle setup)
    计算光栅化一个三角网格所需的信息
*. 三角形遍历(triangle traversal)
    根据上一个阶段的计算结果来判断一个三角网格覆盖了哪些像素,
    并使用三角网格3个顶点的顶点信息对整个覆盖区域的像素进行插值
    对于每个被覆盖的像素会生成一个片元(fragment)
*. 片元着色器(fragment shader)
    输出一个或多个颜色值
*. 逐片元操作(per-fragment operations)
    模板测试(stencil test) 模板缓冲(stencil buffer)
    深度测试(depth test)   深度缓冲(depth buffer)
    混合(blending)         颜色缓冲(color buffer)
    虽然从逻辑上说这些测试是在fragment shader之后进行的,
    但对于大多数GPU来说会尽可能在执行frament shader之前就进行这些测试

===============================================================================
Immediate Mode
===============================================================================
GL_POINTS
GL_LINES
GL_LINE_STRIP
GL_LINE_LOOP
GL_TRIANGLES
GL_TRIANGLE_STRIP
GL_TRIANGLE_FAN
GL_QUADS
GL_QUAD_STRIP
GL_PLOYGON
===============================================================================
NDC (Normalized Device Coordinates) 标准化设备坐标
                  (0, 1)




(-1, 0)           (0, 0)           (1, 0)




                  (0, -1)
===============================================================================
VBO(Vertex Buffer Objects)
VAO(Vertex Array Object)
===============================================================================
GL_STATIC_DRAW:  数据不会或几乎不会改变
GL_DYNAMIC_DRAW: 数据会被改变很多
GL_STREAM_DRAW:  数据每次绘制时都会改变
===============================================================================
Shader
===============================================================================
*. program template
    #version version_number

    in type in_var1_name;
    in type in_var2_name;

    out type out_var_name;

    uniform type uniform_name;

    int main()
    {
        ...
        out_var_name = ...;
    }

 *var type
    float bool int unit bool double
    vecn bvecn ivecn uvecn dvecn
    sampler1D sampler2D sampler3D

 *vector Swizzling
    v4 = v3.xyyz
===============================================================================

===============================================================================
Texture
===============================================================================
*. Mipmaps 多级渐远纹理


===============================================================================
变换矩阵
===============================================================================
缩放
|S1 0  0  0 |(x1)   (S1*x1)
|0  S2 0  0 | x2  =  S2*x2
|0  0  S3 0 | x3     S3*x3
|0  0  0  1 | 1      1
平移
|1  0  0  T1|(x1) = (x1 + T1)
|0  1  0  T2| x2     x2 + T2
|0  0  1  T3| x3     x3 + T3
|0  0  0  1 | 1      1
观察矩阵
|Rx Ry Rz 0| |1 0 0 -Px|
|Ux Uy Uz 0|*|0 1 0 -Py|
|Dz Dy Dz 0| |0 0 1 -Pz|
| 0  0  0 1| |0 0 0 1  |

===============================================================================
光照
===============================================================================
环境光照(Ambient Lighting)
漫反射光照(Diffuse Lighting)
镜面光照(Specular Lighting)
全局照明(Global Illumination)

===============================================================================
混合
===============================================================================
Order-independent Transparent(顺序无关的透明)
