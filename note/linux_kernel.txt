===============================================================================
# deps
===============================================================================
pacman -S base-devel bc cpio
===============================================================================

===============================================================================
# kernel
===============================================================================
make clean
make mrproper
make distclean
-------------------------------------------------------------------------------
make O=build ARCH=x86 allnoconfig
make O=build ARCH=x86 menuconfig
[*] 64-bit kernel
General setup --->
    [*] Initial RAM filesystem and RAM disk (initramfs/initrd) support
    [*]   Support initial ramdisk/ramfs compressed using gzip
Executable file formats --->
    [*] Kernel support for ELF binaries
    [*] Kernel support for scripts starting with #!
Device Drivers --->
    Generic Driver Options --->
        [*] Maintain a devtmpfs filesystem to mount at /dev
        [*]   Automount devtmpfs at /dev, after the kernel mounted the rootfs
    Character devices --->
        Serial drivers --->
            [*] 8250/16550 and compatible serial support
            [*] Console on 8250/16550 and compatible serial port
make O=build ARCH=x86 bzImage
-------------------------------------------------------------------------------
make ARCH=x86 x86_64_defconfig
make ARCH=x86 menuconfig
===============================================================================

===============================================================================
# busybox
===============================================================================
mkdir build
make O=build ARCH=x86 defconfig
make O=build ARCH=x86 menuconfig
settings --->
    [*] Don't use /usr
    [*] Build static binary (no shared libs)
make O=build
make O=build install
cd build/_install
mkdir -pv {etc,proc,sys,usr/{bin,sbin}}
vi init
    #!/bin/sh
    mount -t proc none /proc
    mount -t sysfs none /sys
    exec /bin/sh
chmod +x init
find . -print0 | cpio --null -ov --format=newc | gzip > ../initramfs.img
===============================================================================

===============================================================================
# run in qemu
===============================================================================
qemu-system-x86_64 \
    -nographic -enable-kvm \
    -m 1G \
    -kernel vmlinuz \
    -initrd initramfs.img \
    -append "console=ttyS0"
    # quit ctrl-a x
