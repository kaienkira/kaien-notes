===============================================================================
# deps
===============================================================================
pacman -S base-devel bc cpio
===============================================================================

===============================================================================
# kernel
===============================================================================
make clean
make mrproper
make distclean
-------------------------------------------------------------------------------
make O=build ARCH=x86 allnoconfig
make O=build ARCH=x86 menuconfig

[*] 64-bit kernel (CONFIG_64BIT)

General setup --->
    [*] Initial RAM filesystem and RAM disk (initramfs/initrd) support (CONFIG_BLK_DEV_INITRD)
        [*] Support initial ramdisk/ramfs compressed using gzip (CONFIG_RD_GZIP)
    Timers subsystem  --->
        [*] High Resolution Timer Support (CONFIG_HIGH_RES_TIMERS)

Executable file formats --->
    [*] Kernel support for ELF binaries (CONFIG_BINFMT_ELF)
    [*] Kernel support for scripts starting with #! (CONFIG_BINFMT_SCRIPT)

Power management and ACPI options  --->
    [*] ACPI (Advanced Configuration and Power Interface) Support ---> (CONFIG_ACPI)
        [*] Processor (CONFIG_ACPI_PROCESSOR)
        [*] Thermal Zone (CONFIG_ACPI_THERMAL)

[*] Networking support  ---> (CONFIG_NET)
    Networking options  --->
        [*] Packet socket (CONFIG_PACKET)
        [*] TCP/IP networking (CONFIG_INET)
            [*] The IPv6 protocol ---> (CONFIG_IPV6)
        [*] Network packet filtering framework (Netfilter) ---> (CONFIG_NETFILTER)
            [*] Advanced netfilter configuration
            Core Netfilter Configuration --->
                [*] Netfilter ingress support (CONFIG_NETFILTER_INGRESS)
                [*] Netfilter egress support (CONFIG_NETFILTER_EGRESS)
                [*] Netfilter LOG over NFNETLINK interface (CONFIG_NETFILTER_NETLINK_LOG)
                [*] Netfilter connection tracking support (CONFIG_NF_CONNTRACK)
                [*] Connection tracking labels (CONFIG_NF_CONNTRACK_LABELS)
                [*] Connection tracking netlink interface (CONFIG_NF_CT_NETLINK)
                [*] NFQUEUE and NFLOG integration with Connection Tracking (CONFIG_NETFILTER_NETLINK_GLUE_CT)
                [*] Netfilter nf_tables support (CONFIG_NF_TABLES)
                    [*] Netfilter nf_tables mixed IPv4/IPv6 tables support (CONFIG_NF_TABLES_INET)
                    [*] Netfilter nf_tables netdev tables support (CONFIG_NF_TABLES_NETDEV)
                    [*] Netfilter nf_tables number generator module (CONFIG_NFT_NUMGEN)
                    [*] Netfilter nf_tables conntrack module (CONFIG_NFT_CT)
                    [*] Netfilter nf_tables hardware flow offload module (CONFIG_NFT_FLOW_OFFLOAD)
                    [*] Netfilter nf_tables connlimit module (CONFIG_NFT_CONNLIMIT)
                    [*] Netfilter nf_tables log module (CONFIG_NFT_LOG)
                    [*] Netfilter nf_tables limit module (CONFIG_NFT_LIMIT)
                    [*] Netfilter nf_tables masquerade support (CONFIG_NFT_MASQ)
                    [*] Netfilter nf_tables redirect support (CONFIG_NFT_REDIR)
                    [*] Netfilter nf_tables nat module (CONFIG_NFT_NAT)
                    [*] Netfilter nf_tables tunnel module (CONFIG_NFT_TUNNEL)
                    [*] Netfilter nf_tables stateful object reference module (CONFIG_NFT_OBJREF)
                    [*] Netfilter nf_tables quota module (CONFIG_NFT_QUOTA)
                    [*] Netfilter nf_tables reject support (CONFIG_NFT_REJECT)
                    [*] Netfilter nf_tables hash module (CONFIG_NFT_HASH)
                    [*] Netfilter nf_tables socket match support (CONFIG_NFT_SOCKET)
                    [*] Netfilter nf_tables tproxy support (CONFIG_NFT_TPROXY)
                    [*] Netfilter packet duplication support (CONFIG_NF_DUP_NETDEV)
                    [*] Netfilter nf_tables netdev packet duplication support (CONFIG_NFT_DUP_NETDEV)
                    [*] Netfilter nf_tables netdev packet forwarding support (CONFIG_NFT_FWD_NETDEV)
                    [*] Netfilter nf_tables netdev REJECT support (CONFIG_NFT_REJECT_NETDEV)
                [*] Netfilter flow table mixed IPv4/IPv6 module (CONFIG_NF_FLOW_TABLE_INET)
                [*] Netfilter flow table module (CONFIG_NF_FLOW_TABLE)
        [*] QoS and/or fair queueing ---> (CONFIG_NET_SCHED)
            [*] Class Based Queueing (CONFIG_NET_SCH_CBQ)
            [*] Hierarchical Token Bucket (CONFIG_NET_SCH_HTB)
            [*] Stochastic Fairness Queueing (CONFIG_NET_SCH_SFQ)
            [*] Token Bucket Filter (CONFIG_NET_SCH_TBF)
            [*] Fair Queue Controlled Delay AQM (FQ_CODEL) (CONFIG_NET_SCH_FQ_CODEL)

Device Drivers --->
    Generic Driver Options --->
        [*] Maintain a devtmpfs filesystem to mount at /dev (CONFIG_DEVTMPFS)
            [*] Automount devtmpfs at /dev, after the kernel mounted the rootfs (CONFIG_DEVTMPFS_MOUNT)
    [*] PCI support ---> (CONFIG_PCI)
    Character devices --->
        Serial drivers --->
            [*] 8250/16550 and compatible serial support (CONFIG_SERIAL_8250)
            [*] Console on 8250/16550 and compatible serial port (CONFIG_SERIAL_8250_CONSOLE)
        [*] HPET - High Precision Event Timer (CONFIG_HPET)
            [*] Allow mmap of HPET (CONFIG_HPET_MMAP)
                 [*] Enable HPET MMAP access by default (CONFIG_HPET_MMAP_DEFAULT)
    SCSI device support  --->
        [*] SCSI device support (CONFIG_SCSI)
        [*] SCSI disk support (CONFIG_BLK_DEV_SD)
    [*] Serial ATA and Parallel ATA drivers (libata) ---> (CONFIG_ATA)
        [*] AHCI SATA support (CONFIG_SATA_AHCI)
    [*] Network device support ---> (CONFIG_NETDEVICES)
        [*] Network core driver support (CONFIG_NET_CORE)
            [*] Virtio network driver (CONFIG_VIRTIO_NET)
        [*] Ethernet driver support ---> (CONFIG_ETHERNET)
            [*] Intel devices (CONFIG_NET_VENDOR_INTEL)
                [*] Intel(R) PRO/1000 Gigabit Ethernet support (CONFIG_E1000)
                [*] Intel(R) PRO/1000 PCI-Express Gigabit Ethernet support (CONFIG_E1000E)
                [*] Intel(R) Ethernet Controller I225-LM/I225-V support (CONFIG_IGC)
    Input device support --->
        [*] Keyboards ---> (CONFIG_INPUT_KEYBOARD)
            [*] AT keyboard (CONFIG_KEYBOARD_ATKBD)
    [*] Virtio drivers ---> (CONFIG_VIRTIO_MENU)
        [*] PCI driver for virtio devices (CONFIG_VIRTIO_PCI)

File systems --->
    [*] The Extended 4 (ext4) filesystem (CONFIG_EXT4_FS)

make O=build ARCH=x86 bzImage
-------------------------------------------------------------------------------
make ARCH=x86 x86_64_defconfig
make ARCH=x86 menuconfig
===============================================================================

===============================================================================
# busybox
===============================================================================
mkdir build
make O=build ARCH=x86 defconfig
make O=build ARCH=x86 menuconfig
settings --->
    [*] Don't use /usr
    [*] Build static binary (no shared libs)
make O=build
make O=build install
cd build/_install
rm -f linuxrc
mkdir {etc,proc,sys}
mkdir etc/init.d
--------------------------------------------------------------------------------
vi init
    #!/bin/sh
    mount -t proc none /proc
    mount -t sysfs none /sys
    mknod -m 666 /dev/null c 1 3
    mknod -m 666 /dev/zero c 1 5
    mknod -m 444 /dev/random c 1 8
    mknod -m 444 /dev/urandom c 1 9
    mknod -m 666 /dev/tty0 c 4 0
    mknod -m 666 /dev/tty1 c 4 1
    mknod -m 666 /dev/tty2 c 4 2
    mknod -m 666 /dev/tty3 c 4 3
    mknod -m 666 /dev/tty4 c 4 4
    mknod -m 666 /dev/ttyS0 c 4 64
    exec /sbin/init
chmod +x init
--------------------------------------------------------------------------------
vi etc/inittab
    ::sysinit:/etc/init.d/rcS
    ::respawn:udpsvd -vE 0.0.0.0 69 tftpd -c /opt
    ::askfirst:/bin/cttyhack /bin/sh
    tty1::askfirst:/bin/sh
    tty2::askfirst:/bin/sh
    tty3::askfirst:/bin/sh
    tty4::askfirst:/bin/sh
--------------------------------------------------------------------------------
vi etc/init.d/rcS
    #!/bin/sh
    ip link set lo up
    ip link set eth0 up
    ip addr add 192.168.5.5/24 dev eth0
    ip route add default via 192.168.5.2
chmod +x etc/init.d/rcS
--------------------------------------------------------------------------------
vi etc/resolv.conf
    nameserver 192.168.5.3
--------------------------------------------------------------------------------
find . -print0 | cpio --null -ov --format=newc | gzip > ../initramfs.img
===============================================================================

===============================================================================
# run in qemu
===============================================================================
# nographic
qemu-system-x86_64 \
    -nographic -enable-kvm \
    -machine q35 \
    -cpu host \
    -smp 4 \
    -m 256M \
    -nic user,model=e1000,net=192.168.5.0/24,dhcpstart=192.168.5.11,hostfwd=udp:127.0.0.1:5069-192.168.5.5:69 \
    -kernel vmlinuz \
    -initrd initramfs.img \
    -append "console=ttyS0"
    # quit -> ctrl-a x
    # sendkey ctrl-alt-f1

===============================================================================
# grub
===============================================================================
