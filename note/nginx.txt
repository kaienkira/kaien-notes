===============================================================================
-*- Quick Start -*-
===============================================================================
sudo apt-get install nginx php5-cli php5-fpm
vi /etc/nginx/sites-available/default
    server {
        listen 8080;
        server_name localhost;

        root /opt/www;
        index index.php index.html index.htm;

        try_files $uri $uri/ =404;

        location ~ \.php$ {
            fastcgi_pass unix:/var/run/php5-fpm.sock;
            #fastcgi_pass 127.0.0.1:9000;
            fastcgi_index index.php;

            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            include fastcgi_params;
        }
    } 
===============================================================================
-*- Compilation from source
===============================================================================
./configure --prefix=<prefix> --with-http_ssl_module

===============================================================================
-*- Controlling nginx by signal -*-
===============================================================================
nginx -s <signal>
    stop    <SIGINT, SIGTERM>    fast shutdown
    quit    <SIGQUIT>            graceful shutdown
    reload  <SIGHUP>             reload the configuration file
    reopen  <SIGUSR1>            reopening the log files
    -       <SIGUSR2>            upgrading an executable file
    -       <SIGWINCH>           graceful shutdown of worker processes

# 平滑升级
kill -s SIGUSR2 <nginx-old-master>
    rename nginx.pid to nginx.pid.oldbin start new master process
kill -s SIGWINCH <nginx-old-master>
    recover: kill -s SIGHUP <nginx-old-master>
kill -s SIGQUIT <nginx-old-master>

===============================================================================
-*- Virtual server match rule
===============================================================================
*. ip and port
*. server_name directives
    [] exact name
    [] longest wildcard name starting with an asterisk
    [] longest wildcard name ending with an asterisk
    [] first mathcing regular expression (order in config file)
*. wildcard names
    [] A wildcard name may contain an asterisk only on the name’s start or end
       and only on a dot border
    [] An asterisk can match several name parts
*. regular expression names
    [] start with a ~
    [] quoted when use { and }
    [] use ^ and $
    [] a named re capture can be used later as a variable
        ?<name>
        ?'name'
        ?P<name>
===============================================================================
-*- Location match rule
===============================================================================
1. Directives with the "=" prefix that match the query exactly.
   If found, searching stops.
2. All remaining directives with conventional strings.
   If this match used the "^~" prefix, searching stops.
3. Regular expressions, in the order they are defined in the configuration file.
4. If #3 yielded a match, that result is used. Otherwise,
   the match from #2 is used.

~ case-sensitive re matching
~* case-insensitive re matching

===============================================================================
-*- Directives -*-
===============================================================================
# 指定pid文件路径 (main)
pid <pid-file-path>;

# 工作进程最大连接数 (events)
worker_connections <max_connection_num>;

# 设置默认虚拟服务器 (server)
listen <address:port> default_server 

===============================================================================
-*- SSL -*-
===============================================================================
# nginx conf
listen 443 ssl;
ssl_certificate server.crt;
ssl_certificate_key server.key;
ssl_client_certificate ca.crt;
ssl_verify_client on;
ssl_session_cache shared:SSL:10m;
ssl_session_timeout 10m;
error_page 497 https://$host:$server_port$request_uri;
===============================================================================
-*- http limit req -*-
===============================================================================
limit_conn perip 8;
limit_req zone=perreq nodelay;

===============================================================================
-*- force file download -*-
===============================================================================
if ($request_filename ~ ^.*/(?P<request_basename>[^/]+\.(txt|xls|xlsx))$) {
    add_header Content-Disposition 'attachment; filename="$request_basename"';
}
if ($request_filename ~ "^.*/(.+\.zip|tgz|iso|gz)$"){
    set $fname $1;
    add_header Content-Disposition 'attachment; filename="$fname"';
}
