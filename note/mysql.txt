===============================================================================
*. mysql安全设置
    mysql_secure_installation

* 重置root密码
    systemctl stop mariadb.service
    sudo /usr/sbin/mysqld --skip-grant-tables --skip-networking &
    UPDATE mysql.user SET Password=PASSWORD('newpwd') WHERE User='root';
    FLUSH PRIVILEGES;

*. 取消query cache
    select sql_no_cache ...

*. 16进制值
    update .. set col = x 'beb5ae';
    hex(); unhex();

*. 转换为整数
    truncate(double, 0);

*. Row Size > 8192
    [mysqld]
    innodb_file_per_table
    innodb_file_format = Barracuda
    alter table <table_name> ENGINE=InnoDB ROW_FORMAT=COMPRESSED

===============================================================================
mysql
    -r --raw
    -s --silent

    *. Typing Control+C causes mysql to attempt to kill the current statement
===============================================================================
mysqldump [options] <db_name> [table_name]
    -u <user_name>
    -p<password>
    -h <host>
    -d --no-data           不导出数据, 只导出建表语句
    -t --no-create-info    只导出数据, 不导出建表语句
    --tables <table_name>  指定导出的表名
    --insert-ignore        insert语句将带有ignore选项
    -T --tab <path>        生成tab分隔的数据文件
    -R --routines          导出存储过程
    -w --where <condition> 按条件导出数据

===============================================================================
mysql -h 127.0.0.1 -u root -p

>status
>show databases;
>show variables;
>create database <db_name>;

>create user '<user_name>' identified by '<password>';
>alter user 'username'@'localhost' password expire;
>select host,user,password from mysql.user;

>grant select,insert,update,delete,create,alter,drop on <db_name>.* to '<user_name>'
 @'localhost' identified by '<user_passwd>';
>grant all on *.* to root@'%' identified by '<root_passwd>';
>set password for 'root'@'localhost'=PASSWORD('<root_passwd>');
>drop user <username>@'localhost';
>flush privileges;
>show grants;

>select now(), current_date();
>select version();
>select sin(), pi();

>insert into <table_name>(...) values(...) on duplicate key update ... = ...
>replace into <table_name>(...) values(...)

===============================================================================
-*- 默认字符串字符集在比较时大小写不敏感 -*-
-------------------------------------------------------------------------------
*. 将查询条件用binary()括起来
*. 修改该字段的collation 为 binary 
   VARCHAR(n) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL;
   VARCHAR(n) CHARACTER SET utf8 BINARY;
   (BINARY is shorthand for specifying the binary collation of
    the column character set)

===============================================================================
-*- Leftmost Indexes Prefixes -*-
-------------------------------------------------------------------------------
In a table that has a composite (multiple column) index, MySQL can use 
leftmost index prefixes of that index.
A leftmost prefix of a composite index consists of one or more of the initial
columns of the index. MySQL's capability to use leftmost index prefixes
enables you to avoid creating unnecessary indexes.

===============================================================================
-*- Trailing spaces in comparison -*-
-------------------------------------------------------------------------------
All MySQL collations are of type PADSPACE.
This means that all CHAR, VARCHAR, and TEXT values in MySQL
are compared without regard to any trailing spaces. 

===============================================================================
-*- Dead Lock -*-
-------------------------------------------------------------------------------
>show processlist;
>show engine innodb status\G
>show open tables;
>show status like '%lock%';

===============================================================================
-*- InnoDB Isolation Level -*-
-------------------------------------------------------------------------------
* Read Uncommitted
* Read Committed
* Repeatable Read (default)
* Serializable

>set transaction isolation level <level>
>set transaction isolation level read uncommitted;

===============================================================================
-*- Optimization -*-
-------------------------------------------------------------------------------
show variables like '..' 

my.cnf
    [mysqld]
    log_slow_queries = /var/log/mysql/mysql-slow.log
    long_query_time = 1
    log-queries-not-using-indexes
profile
    set profiling = 1;
    <db_query>
    show profiles;
    show profile for query <query_id>

    innodb_flush_log_at_trx_commit = 2
    =0时 日志缓冲每秒一次地被写到日志文件, 并且对日志文件做到磁盘操作的刷新,
        任何mysqld进程的崩溃会删除崩溃前最后一秒的事务
    =1时 在每个事务提交时，日志缓冲被写到日志文件，对日志文件做到磁盘操作的刷新
        最安全的方式，但是速度最慢。
    =2时 在每个事务提交时, 日志缓冲被写到文件, 但不对日志文件做到磁盘操作的刷新
        只有操作系统崩溃或掉电才会删除最后一秒的事务, 不然不会丢失事务
    sync_binlog = 0
    innodb_flush_method = O_DIRECT
    innodb_buffer_pool_size = 建议该参数的配置在物理内存的70％－80％之间
===============================================================================
