===============================================================================
mysql安全设置
    mysql_secure_installation
===============================================================================
重置root密码
    service mysql stop
    sudo /usr/sbin/mysqld --skip-grant-tables --skip-networking &
    UPDATE mysql.user SET Password=PASSWORD('newpwd') WHERE User='root';
    FLUSH PRIVILEGES;
===============================================================================
设置外网可访问
    vi /etc/mysql/my.cnf
    bind-address = 0.0.0.0

mysql 5.5
    grant all on *.* to root@'%' identified by '';
    flush privileges;
    show grants;
mysql 5.7
    alter user 'root'@'localhost' identified with mysql_native_password by '';
    create user 'root'@'%' identified by '';
    # alter user 'root'@'%' identified by '';
    grant all on *.* to 'root'@'%';
    flush privileges;
    show grants;
===============================================================================
字符集
    >show variables like 'collation_%';
    >show variables like 'character%';
    >create database <db_name> character set utf8;
===============================================================================
取消query cache
    select sql_no_cache ...
===============================================================================
16进制值
    update .. set col = x 'beb5ae';
    hex(); unhex();
转换为整数
    TRUNCATE(double, 0);
===============================================================================
Row Size > 8192
    [mysqld]
    innodb_file_per_table
    innodb_file_format = Barracuda

    alter table <table_name> ENGINE=InnoDB ROW_FORMAT=COMPRESSED
===============================================================================
mysql
    -r --raw
    -s --silent

    *. Typing Control+C causes mysql to attempt to kill the current statement
===============================================================================
mysqldump [options] <db_name> [table_name]
    -u <user_name>
    -p<password>
    -h <host>
    -d --no-data           不导出数据, 只导出建表语句
    -t --no-create-info    只导出数据, 不导出建表语句
    --tables <table_name>  指定导出的表名
    --insert-ignore        insert语句将带有ignore选项
    -T --tab <path>        生成tab分隔的数据文件
    -R --routines          导出存储过程
    -w --where <condition> 按条件导出数据

insert into <table_name>(...) values(...)
on duplicate key update ... = ...
replace into <table_name>(...) values(...)
===============================================================================
mysql -h 127.0.0.1 -u root -p
>status
>show databases;
>create database <db_name>;

>create user '<user_name>' identified by '<password>';
>alter user 'username'@'localhost' password expire;
>select host,user,password from mysql.user;

>grant select,insert,update,delete,create,alter,drop on <db_name>.* to '<user_name>'
 @'localhost' identified by '<user_passwd>';
>grant all on *.* to root@'%' identified by '<root_passwd>';
>set password for 'root'@'localhost'=PASSWORD('<root_passwd>');
>drop user <username>@'localhost';
>flush privileges;
>show grants;
===============================================================================
*. show full columns from <table_name>;
===============================================================================
alter table <table_name> add <column_name> <column_definition>
      [first | after col_name]
===============================================================================
create [unique] index <index_name> on <table_name>(<index_col_name>, ...)
===============================================================================
系统表
information_schema.tables
===============================================================================
输入中文
set names utf8;
扩展utf8字符集
utf8mb4;
===============================================================================
select now(), current_date();
select version();
select sin(), pi();
===============================================================================
配置参数

skip-external-locking
loose-skip-innodb

# 禁用DNS反向解析
skip-name-resolve
GRANT ALL on *.* to 'root'@'127.0.0.1' identified by '' WITH GRANT OPTION;

# 禁用网络连接
skip-networking
===============================================================================
-*- String Functions -*-
-------------------------------------------------------------------------------
*. concat(str1, str2, ...)
*. substring(str, pos)
   substring(str, pos, len)
   <> pos从1开始
===============================================================================
-*- 默认字符串字符集在比较时大小写不敏感 -*-
-------------------------------------------------------------------------------
*. 将查询条件用binary()括起来
*. 修改该字段的collation 为 binary 
   VARCHAR(n) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL;
   VARCHAR(n) CHARACTER SET utf8 BINARY;
   (BINARY is shorthand for specifying the binary collation of
    the column character set)
===============================================================================
-*- Leftmost Indexes Prefixes -*-
-------------------------------------------------------------------------------
In a table that has a composite (multiple column) index, MySQL can use 
leftmost index prefixes of that index.
A leftmost prefix of a composite index consists of one or more of the initial
columns of the index. MySQL's capability to use leftmost index prefixes
enables you to avoid creating unnecessary indexes.
===============================================================================
-*- Dead Lock -*-
-------------------------------------------------------------------------------
>show processlist;
>show engine innodb status\G
>show open tables;
>show status like '%lock%';
===============================================================================
-*- InnoDB Isolation Level -*-
-------------------------------------------------------------------------------
>set transaction isolation level <level>

* Read Uncommitted
    dirty read
* Read Committed
    phantom read
* Repeatable Read (default)
    no phantom read because of mvcc
* Serialize
===============================================================================
-*- Pagination -*-
-------------------------------------------------------------------------------
sql_calc_found_rows
===============================================================================

===============================================================================
-*- Optimization -*-
-------------------------------------------------------------------------------
show variables like '..' 

my.cnf
    [mysqld]
    log_slow_queries = /var/log/mysql/mysql-slow.log
    long_query_time = 1
    log-queries-not-using-indexes
profile
    set profiling = 1;
    <db_query>
    show profiles;
    show profile for query <query_id>

    innodb_flush_log_at_trx_commit = 2
    =0时 日志缓冲每秒一次地被写到日志文件, 并且对日志文件做到磁盘操作的刷新,
        任何mysqld进程的崩溃会删除崩溃前最后一秒的事务
    =1时 在每个事务提交时，日志缓冲被写到日志文件，对日志文件做到磁盘操作的刷新
        最安全的方式，但是速度最慢。
    =2时 在每个事务提交时, 日志缓冲被写到文件, 但不对日志文件做到磁盘操作的刷新
        只有操作系统崩溃或掉电才会删除最后一秒的事务, 不然不会丢失事务
    sync_binlog = 0
    innodb_flush_method = O_DIRECT
    innodb_buffer_pool_size = 建议该参数的配置在物理内存的70％－80％之间
===============================================================================
